name: Run Go unit tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: bookmark
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.19
        id: go
      - name: Go version
        run: |
          go version
          which go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Install Mailhog
        run: |
          go get github.com/mailhog/MailHog
          /home/runner/go/bin/MailHog
        shell: bash
      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/migrate
          which migrate
      - name: Run migrations
        run: migrate -path db/migration -database postgresql://root:secret@localhost:5432/bookmark?sslmode=disable --verbose up
      - name: Run Gosec
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          make gosec
      - name: Test
        run: make testcoverage
        env:
          DB_SOURCE: postgresql://root:secret@localhost:5432/bookmark?sslmode=disable
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./.coverage/coverage.out
